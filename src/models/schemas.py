from typing import TypedDict, List, Dict, Any, Optional, Literal
from datetime import datetime
from pydantic import BaseModel, Field


class Message(BaseModel):
    id: str
    session_id: str
    turn_id: int
    speaker: Literal["user", "agent"]
    agent: Optional[Literal["Concierge", "UrgentCare", "Insurance", "Coordinator"]] = None
    role: Literal["system", "assistant", "user"]
    content: str
    timestamp: datetime = Field(default_factory=datetime.now)
    metadata: Dict[str, Any] = Field(default_factory=dict)


class PatientEHR(BaseModel):
    """Structured EHR data following FHIR standards - no narrative content"""
    patient_id: str
    demographics: Dict[str, Any]  # age, sex, mrn, etc.
    vitals: Dict[str, Any]  # temp, bp, hr, weight, height, etc.
    medical_history: List[str]  # structured medical history entries
    insurance: Dict[str, Any]  # plan, member_id, network status, etc.
    emergency_contacts: Dict[str, Any] = Field(default_factory=dict)  # emergency contact info
    constraints: Dict[str, Any] = Field(default_factory=dict)  # time preferences, language, etc.
    availability: Dict[str, List[str]] = Field(default_factory=dict)  # deprecated - kept for compatibility


class ClinicalSummary(BaseModel):
    """Clinical narrative generated by Concierge for specialist agents"""
    patient_id: str
    summary: str  # Concierge's clinical summary for specialists
    chief_complaint: str  # Original patient complaint
    presenting_symptoms: str  # Symptom narrative
    urgency_level: Literal["routine", "urgent", "emergent"] = "routine"
    generated_at: datetime = Field(default_factory=datetime.now)
    generated_by: str = "Concierge"


class GraphState(TypedDict):
    messages: List[Message]
    patient_ehr: PatientEHR  # Structured EHR data
    clinical_summary: Optional[ClinicalSummary]  # Clinical narrative from Concierge
    current_agent: str
    next_agent: Optional[str]
    turn_count: int
    max_turns: int
    workflow_status: Literal["active", "done", "error"]
    current_plan: Optional[Dict[str, Any]]
    internal_context: Dict[str, Any]
    conversation_history: List[str]  # For building clinical summary